// Generated by CoffeeScript 1.3.3
(function() {
  var String_da99;

  String_da99 = (function() {

    String_da99.HEAD_WHITE_SPACE = /^[\s]+/;

    String_da99.END_PERIOD = /\.$/;

    String_da99.END_COLON = /\:$/;

    function String_da99(parent) {
      this.str = parent;
      this.HEAD_WHITE_SPACE = this.constructor.HEAD_WHITE_SPACE;
      this.END_PERIOD = this.constructor.END_PERIOD;
      this.END_COLON = this.constructor.END_COLON;
    }

    String_da99.prototype.standardize = function() {
      return this.str.replace(/\t/, "  ").replace(/\r/, "");
    };

    String_da99.prototype.strip = function() {
      return this.str.replace(/^\s+|\s+$/g, '');
    };

    String_da99.prototype.is_empty = function() {
      return this.str.length === 0;
    };

    String_da99.prototype.is_whitespace = function() {
      return this.strip().length === 0;
    };

    String_da99.prototype.begins_with_whitespace = function() {
      return this.HEAD_WHITE_SPACE.test(this.str);
    };

    String_da99.prototype.has_end_period = function() {
      return this.END_PERIOD.test(this.str);
    };

    String_da99.prototype.has_end_colon = function() {
      return this.END_COLON.test(this.str);
    };

    String_da99.prototype.remove_end = function(type) {
      switch (type) {
        case ".":
        case "period":
          return this.str.replace(this.END_PERIOD, "");
        case ":":
        case "colon":
          return this.str.replace(this.END_COLON, "");
        default:
          return this.str.replace(new RegExp("\\" + type + "$"), "");
      }
    };

    String_da99.prototype.strip_beginning_empty_lines = function(lines) {
      var arr, line, _i, _len;
      arr = [];
      for (_i = 0, _len = lines.length; _i < _len; _i++) {
        line = lines[_i];
        if (line.englishy('strip') !== "") {
          arr.push(line);
        }
      }
      return arr;
    };

    String_da99.prototype.remove_indentation = function() {
      var final, indent, indent_meta, l, lines;
      if (this.strip() === "") {
        return "";
      }
      lines = this.str.split("\n");
      indent_meta = this.HEAD_WHITE_SPACE.exec(lines[0]);
      if (!indent_meta) {
        return lines.join("\n");
      }
      indent = indent_meta[0];
      final = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = lines.length; _i < _len; _i++) {
          l = lines[_i];
          _results.push(l.replace(indent, ""));
        }
        return _results;
      })();
      return final.join("\n");
    };

    return String_da99;

  })();

  module.exports = function(str) {
    return new String_da99(str);
  };

}).call(this);
